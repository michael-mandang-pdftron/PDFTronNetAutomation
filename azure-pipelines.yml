# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'debug'

steps:
# - task: NuGetToolInstaller@1

# - task: NuGetCommand@2
#   inputs:
#     restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: PowerShell@2
  inputs:
    filePath: '$(System.DefaultWorkingDirectory)'
    arguments: 'New-Item -ItemType Directory -Force -Path C:\AutomationFiles\PDFTron\InputFiles'
    failOnStderr: true

- task: PowerShell@2
  inputs:
    filePath: '$(System.DefaultWorkingDirectory)'
    arguments: 'New-Item -ItemType Directory -Force -Path C:\AutomationFiles\PDFTron\PDF2Text'
    failOnStderr: true
- task: CopyFiles@2
  inputs:
    SourceFolder: 'inputFiles'
    Contents: '**'
    TargetFolder: 'C:\AutomationFiles\PDFTron\InputFiles'
    OverWrite: true

- task: CopyFiles@2
  inputs:
    SourceFolder: 'PDFTronNetAutomation/PDF2Text'
    Contents: '**'
    TargetFolder: 'C:\AutomationFiles\PDFTron\PDF2Text'
    OverWrite: true
    

- task: VSTest@2
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: |
      **\*automation*.dll
      !**\*TestAdapter.dll
      !**\obj\**
    searchFolder: '$(System.DefaultWorkingDirectory)'
    testFiltercriteria: 'Name=SimpleCheckTest'
# - task: CopyFiles@2
#   inputs:
#     SourceFolder: 'inputFiles'
#     Contents: '**'
#     TargetFolder: '$(Build.ArtifactStagingDirectory)/inputFiles'
#     OverWrite: true

# - task: CopyFiles@2
#   inputs:
#     SourceFolder: 'PDFTronNetAutomation/bin/debug'
#     Contents: '**'
#     TargetFolder: '$(Build.ArtifactStagingDirectory)/dll'
#     OverWrite: true
    

# - task: VSTest@2
#   inputs:
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'

# - task: PublishBuildArtifacts@1
#   inputs:
#     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#     ArtifactName: 'drop'
#     publishLocation: 'Container'
